count_econ$moral_i <- count_econ$moral_i/5
count_econ$moral_p <- count_econ$moral_p/5
#outgroup building
count_econ$outgroup_moral<- (count_econ$moral_t + count_econ$moral_i + count_econ$moral_p)/3
#difference
count_econ$ethno_moral<- count_econ$moral_d - count_econ$outgroup_moral
#Vertrauen
count_econ$vertrauen_d <- count_econ$vertrauen_d/5
count_econ$vertrauen_t <- count_econ$vertrauen_t/5
count_econ$vertrauen_i <- count_econ$vertrauen_i/5
count_econ$vertrauen_p <- count_econ$vertrauen_p/5
#outgroup building
count_econ$outgroup_vertrauen<- (count_econ$vertrauen_t + count_econ$vertrauen_i + count_econ$vertrauen_p)/3
#difference
count_econ$ethno_vertrauen<- count_econ$vertrauen_d - count_econ$outgroup_vertrauen
#Ethnozentrismus Index
count_econ$ethno <- (count_econ$ethno_vertrauen + count_econ$ethno_moral)/2
count_econ$ethno <- (count_econ$ethno +1) /2
#Konservativimus- Maß / fehlende int. Solidarität (-1: no Kons : 1 kons )
count_econ$kons1[count_econ$kons1==0]<- NA
count_econ$kons1[count_econ$kons1==1]<- -1
count_econ$kons1[count_econ$kons1==2]<- -0.5
count_econ$kons1[count_econ$kons1==3]<- 0
count_econ$kons1[count_econ$kons1==4]<- 0.5
count_econ$kons1[count_econ$kons1==5]<- 1
count_econ$kons2[count_econ$kons2==0]<- NA
count_econ$kons2[count_econ$kons2==5]<- -1
count_econ$kons2[count_econ$kons2==4]<- -0.5
count_econ$kons2[count_econ$kons2==3]<- 0
count_econ$kons2[count_econ$kons2==2]<- 0.5
count_econ$kons2[count_econ$kons2==1]<- 1
count_econ$kons3[count_econ$kons3==0]<- NA
count_econ$kons3[count_econ$kons3==1]<- -1
count_econ$kons3[count_econ$kons3==2]<- -0.5
count_econ$kons3[count_econ$kons3==3]<- 0
count_econ$kons3[count_econ$kons3==4]<- 0.5
count_econ$kons3[count_econ$kons3==5]<- 1
count_econ$kons4[count_econ$kons4==0]<- NA
count_econ$kons4[count_econ$kons4==5]<- -1
count_econ$kons4[count_econ$kons4==4]<- -0.5
count_econ$kons4[count_econ$kons4==3]<- 0
count_econ$kons4[count_econ$kons4==2]<- 0.5
count_econ$kons4[count_econ$kons4==1]<- 1
count_econ$kons5[count_econ$kons5==0]<- NA
count_econ$kons5[count_econ$kons5==1]<- -1
count_econ$kons5[count_econ$kons5==2]<- -0.5
count_econ$kons5[count_econ$kons5==3]<- 0
count_econ$kons5[count_econ$kons5==4]<- 0.5
count_econ$kons5[count_econ$kons5==5]<- 1
count_econ$kons6[count_econ$kons6==0]<- NA
count_econ$kons6[count_econ$kons6==1]<- -1
count_econ$kons6[count_econ$kons6==2]<- -0.5
count_econ$kons6[count_econ$kons6==3]<- 0
count_econ$kons6[count_econ$kons6==4]<- 0.5
count_econ$kons6[count_econ$kons6==5]<- 1
count_econ$kons<- (count_econ$kons1 + count_econ$kons2 + count_econ$kons3 +
count_econ$kons4 + count_econ$kons5 + count_econ$kons6) /6
#City size: 0-20k 20k-100.000 >100.000
count_econ$citysize[count_econ$citysize==1| count_econ$citysize==2 | count_econ$citysize==3 | count_econ$citysize==4]<- 1
count_econ$citysize[count_econ$citysize==5| count_econ$citysize==6 ]<- 2
count_econ$citysize[count_econ$citysize==7| count_econ$citysize==8 ]<- 3
#PID wertlos, weil wir wenn partisanship bräuchten und aus der Frage keine Stärker der Neigung ableiten können 8wie bei Kam und Kinder in biparteiensystem mit Abstufungen)
# Stattdessen: Religiösität
#Income Perzentil
count_econ$incomepercentil<- count_econ$incomepercentil / 10
#Bundesland East (1) West (0)
count_econ$bundesland[count_econ$bundesland==1| count_econ$bundesland==2 | count_econ$bundesland==5 | count_econ$bundesland==6 | count_econ$bundesland==7 | count_econ$bundesland==9 | count_econ$bundesland==10 | count_econ$bundesland==11 | count_econ$bundesland==12 | count_econ$bundesland==15]<- 0
count_econ$bundesland[count_econ$bundesland==3| count_econ$bundesland==4 |  count_econ$bundesland==8 | count_econ$bundesland==13 | count_econ$bundesland==14 | count_econ$bundesland==16 ]<- 1
count_econ$ost <- count_econ$bundesland
count_econ$ost<- count_econ$ost %>% as.character() %>% as.factor()
# Gender
count_econ$sex[count_econ$sex==1]<- 0
count_econ$sex[count_econ$sex==2]<- 1
count_econ$female <- count_econ$sex
count_econ$female<- count_econ$female %>% as.character() %>% as.factor()
#age
count_econ$age <- ((count_econ$age)-2017)*(-1)
count_econ$age[count_econ$age>=90]<- NA
#Education (1:3)
count_econ$educ2[count_econ$educ2==1 | count_econ$educ2==2 | count_econ$educ2==3]<- 1
count_econ$educ2[count_econ$educ2==4 | count_econ$educ2==5 | count_econ$educ2==6]<- 2
count_econ$educ2[count_econ$educ2==7 ]<- 3
count_econ$educ2[count_econ$educ2==8 | count_econ$educ2==0]<- NA
count_econ$edu<- count_econ$educ2
count_econ$educ2<- count_econ$educ2 %>% as.character() %>% as.factor()
#Contact Refugee (0= Nein, 1= Ja)
count_econ$contactref[count_econ$contactref==1]<- 1
count_econ$contactref[count_econ$contactref==2]<- 0
count_econ$contactref<- count_econ$contactref %>% as.character() %>% as.factor()
#PID
count_econ$pid<- count_econ$pid %>% as.character() %>% as.factor()
#Datacleaning:
#Delete all Ethno NA´s (proxy: all terror = 0)
count_econ<-count_econ[!(count_econ$terror==0),]
count_econ<-count_econ[!is.na(count_econ$ethno),]
#Delete all other nations
count_econ<-count_econ[!(count_econ$nationalitydeu==2),]
count_econ <- count_econ[ -c(4,5, 7:10, 12, 14, 15, 17:24, 25, 26, 27, 29:37, 42) ]
#Merge!
names(count_econ)[names(count_econ) == 'accepted'] <- 'accepted_e'
names(count_niqab)[names(count_niqab) == 'accepted'] <- 'accepted_n'
df_main <- merge(count_econ,count_niqab,by="lfdn")
load("data/conjoint_econ.Rdata")
econ<-con_e
as.data.frame(econ)
rm(con_e)
mat1 <- model.matrix( ~ choice  +  Geschlecht + Heimatland +
Deutschkenntnisse +
lfdn,data = econ) # Hinter der Tilde alle Variablen, die Du auch aggregieren willst + die ID variable. Bei data den jeweiligen Conjointdatensatz wählen.
agg_mat1 <- aggregate(mat1,list(mat1[,"lfdn"]),FUN = mean) # Diesen Datensatz kannst Du über left_join() oder merge() mit den restlichen Befragtenvariablen zusammenspielen.
df_main <- merge(count_econ,agg_mat1,by="lfdn")
#Datamange df_main
df_main$deutschkenntnisse<- 1 - df_main$Deutschkenntnissekeine
df_main$heimatlandimmi <- (df_main$HeimatlandItalien + df_main$HeimatlandPolen + df_main$HeimatlandTürkei)
df_main$heimatlandflucht <- df_main$HeimatlandIrak
#Nationalität als Interaktionsfaktor: 2 Modelle: A mit eEInteilung, b mit einzelnen Interaktions-Nationalitäten
df_main <- df_main[ -c(27:29, 37:38) ]
df_main <- merge(df_main,count_niqab,by="lfdn")
rm(agg_mat1)
rm(count_econ)
rm(econ)
rm(mat1)
rm(count_niqab)
View(df_main)
save(df_main,"data/immigration.Rdata")
save(df_main,file="data/immigration.Rdata")
load("data/immigration.Rdata")
# Data Management
rm(list=ls())
## Loading of packages
library(plyr)
library(dplyr)
library(haven)
library(ggplot2)
library(ggiraph)
load("data/immigration.Rdata")
#Age
mean(df_main$age, na.rm=T) #36.33415 years
hist(df_main$age, na.rm=T, breaks=80)#Bessere Grafik
table(df_main$age)
boxplot(df_main$age)
summary(df_main$female)
# 0   1
#225 183
183/408
hist(df_main$edu, breaks = 3)
summary(df_main$educ2)
summary(df_main$ost)
69/421 # 16,38 Prozent Ostdeutschland ( so iemlich genau Zensus 2011, egal weil keine Repräsentation): http://www.bpb.de/nachschlagen/zahlen-und-fakten/soziale-situation-in-deutschland/61532/bevoelkerungsentwicklung
summary(df_main$pid)/425
mean(df_main$accepted, na.rm=T)
hist(df_main$accepted, breaks=10)
df_main$accepted<- as.numeric(df_main$accepted)
df_main$accepted %>% as.numeric(df_main$accepted)
View(df_main)
df_main$accepted <- df_main$accepted_e
mean(df_main$accepted, na.rm=T)
hist(df_main$accepted, breaks=10)
boxplot(df_main$accepted)
ggplot(data=df_main, aes(x=age, y=accepted))+
geom_line()
summary(df_main$accepted)
plot_data1 <- df_main%>%
group_by(age)%>%
summarize(mean = mean(accepted,na.rm = TRUE)) %>%
as.data.frame()
ggplot(data=plot_data1, aes(x=age, y=mean))+
geom_line()
# Man sieht keine patterns des Alters da hinter, nochmal kurz in Gruppen
df_main$agegroup<- df_main$age
df_main$agegroup[df_main$agegroup<0]<- NA
df_main$agegroup[df_main$agegroup>18 & df_main$agegroup<=29]<- 1
df_main$agegroup[df_main$agegroup>29 & df_main$agegroup<=40]<- 2
df_main$agegroup[df_main$agegroup>40 & df_main$agegroup<=50]<- 3
df_main$agegroup[df_main$agegroup>50 & df_main$agegroup<=65]<- 4
df_main$agegroup[df_main$agegroup>65 ]<- 5
plot_data2 <- df_main%>%
group_by(agegroup)%>%
summarize(mean = mean(accepted,na.rm = TRUE)) %>%
as.data.frame()
a<- ggplot(data=plot_data2, aes(x=agegroup, y=mean))+
geom_line() + expand_limits(y = c(0,1))
a
mean(df_main$accepted[df_main$agegroup==5 ], na.rm=T)
plot_data3 <- df_main%>%
group_by(female)%>%
summarize(mean = mean(accepted,na.rm = TRUE)) %>%
as.data.frame()
plot_data4 <- df_main%>%
group_by(edu)%>%
summarize(mean = mean(accepted,na.rm = TRUE)) %>%
as.data.frame()
c<- ggplot(data=plot_data4, aes(x=edu, y=mean))+
geom_line() + expand_limits(y = c(0,1))
c
plot_data5 <- df_main%>%
group_by(ost)%>%
summarize(mean = mean(accepted,na.rm = TRUE)) %>%
as.data.frame()
plot_data5 <- plot_data5[-c(3), ]
plot(plot_data5)
op <- par(mfrow = c(2, 2))
boxplot(accepted~ female, data= df_main, names= c("Männlich", "Weiblich"), main= "Akzeptanzrate nach Geschlecht")
boxplot(accepted~ agegroup, data= df_main, names= c("18-29", "30-40", "41-50", "51-65", "65+"), main= "Akzeptanzrate nach Altersgruppe")
boxplot(accepted~ edu, data= df_main, names= c("Niedrig", "Mittel", "Hoch"), main= "Akzeptanzrate nach Bildungsniveau")
boxplot(accepted~ ost, data= df_main, names= c("Alte Bundesländer", "Neue Bundesländer"), main= "Akzeptanzrate nach Region")
op <- par(mfrow = c(1,1))
mean(df_main$ethno, na.rm=T)
hist(df_main$ethno, breaks=1000, main="Häufigkeitsverteilung ethnozentristischer Tendenzen")
boxplot(df_main$ethno)
ggplot(data=df_main, aes(x=age, y=ethno))+
geom_line()
summary(df_main$ethno)
plot_data6 <- df_main%>%
group_by(age)%>%
summarize(mean = mean(ethno,na.rm = TRUE)) %>%
as.data.frame()
ggplot(data=plot_data6, aes(x=age, y=mean))+
geom_line()
plot_data7 <- df_main%>%
group_by(agegroup)%>%
summarize(mean = mean(ethno,na.rm = TRUE)) %>%
as.data.frame()
d<- ggplot(data=plot_data7, aes(x=agegroup, y=mean))+
geom_line() + expand_limits(y = c(-1,1))
d
plot_data8 <- df_main%>%
group_by(female)%>%
summarize(mean = mean(ethno,na.rm = TRUE)) %>%
as.data.frame()
plot_data9 <- df_main%>%
group_by(edu)%>%
summarize(mean = mean(ethno,na.rm = TRUE)) %>%
as.data.frame()
e<- ggplot(data=plot_data9, aes(x=edu, y=mean))+
geom_line() + expand_limits(y = c(-1,1))
e
plot_data10 <- df_main%>%
group_by(ost)%>%
summarize(mean = mean(ethno,na.rm = TRUE)) %>%
as.data.frame()
plot_data10 <- plot_data10[-c(3), ]
plot(plot_data10)
op <- par(mfrow = c(2, 2))
boxplot(ethno~ female, data= df_main, names= c("Männlich", "Weiblich"), main= "Ethnozentrismus nach Geschlecht")
boxplot(ethno~ agegroup, data= df_main, names= c("18-29", "30-40", "41-50", "51-65", "65+"), main= "Ethnozentrismus nach Altersgruppe")
boxplot(ethno~ edu, data= df_main, names= c("Niedrig", "Mittel", "Hoch"), main= "Ethnozentrismus nach Bildungsniveau")
boxplot(ethno~ ost, data= df_main, names= c("Alte Bundesländer", "Neue Bundesländer"), main= "Ethnozentrismus nach Region")
median(df_main$ethno) #Median = 0
df_main$ethnosample <- df_main$ethno
df_main$ethnosample[df_main$ethno<=0.5]<- 0
df_main$ethnosample[df_main$ethno>0.5]<- 1
df_main$ethnosample<- df_main$ethnosample %>% as.character() %>% as.factor()
table(df_main$ethnosample)
df_subset1<- df_main[df_main$ethnosample==0,]
df_subset2<- df_main[df_main$ethnosample==1,]
cor(df_subset1$ethno, df_subset1$accepted)
cor(df_subset2$ethno, df_subset2$accepted)
a1<- ggplot(data=df_main, aes(x=ethno, y=accepted))+
geom_point(colour="grey")+
geom_smooth(position="identity", method=lm, colour="black")+
ggtitle("Beziehung zwischen Ethnozentrismus und Akzeptanzrate")+
ylab("Akzeptanzrate")+
xlab("Ethnozentrismus")+
theme(legend.position="none")
ggsave(filename="ggplot_Ethno_all.jpeg",
plot=a1,
pointsize = 24,
width = 18 ,
height = 10,
scale = 0.5,
dpi = 800)
install.packages(c("Amelia", "bit64", "calibrate", "data.table", "extrafont", "fitdistrplus", "ggcorrplot", "ggthemes", "hrbrthemes", "lmtest", "stargazer"))
ggplot(data=df_main, aes(x=age, y=accepted))+
geom_line()
summary(df_main$accepted)
plot_data1 <- df_main%>%
group_by(age)%>%
summarize(mean = mean(accepted,na.rm = TRUE)) %>%
as.data.frame()
ggplot(data=plot_data1, aes(x=age, y=mean))+
geom_line()
# Man sieht keine patterns des Alters da hinter, nochmal kurz in Gruppen
df_main$agegroup<- df_main$age
df_main$agegroup[df_main$agegroup<0]<- NA
df_main$agegroup[df_main$agegroup>18 & df_main$agegroup<=29]<- 1
df_main$agegroup[df_main$agegroup>29 & df_main$agegroup<=40]<- 2
df_main$agegroup[df_main$agegroup>40 & df_main$agegroup<=50]<- 3
df_main$agegroup[df_main$agegroup>50 & df_main$agegroup<=65]<- 4
df_main$agegroup[df_main$agegroup>65 ]<- 5
plot_data2 <- df_main%>%
group_by(agegroup)%>%
summarize(mean = mean(accepted,na.rm = TRUE)) %>%
as.data.frame()
a<- ggplot(data=plot_data2, aes(x=agegroup, y=mean))+
geom_line() + expand_limits(y = c(0,1))
a
mean(df_main$accepted[df_main$agegroup==5 ], na.rm=T)
plot_data3 <- df_main%>%
group_by(female)%>%
summarize(mean = mean(accepted,na.rm = TRUE)) %>%
as.data.frame()
plot_data4 <- df_main%>%
group_by(edu)%>%
summarize(mean = mean(accepted,na.rm = TRUE)) %>%
as.data.frame()
c<- ggplot(data=plot_data4, aes(x=edu, y=mean))+
geom_line() + expand_limits(y = c(0,1))
c
setwd("data/aiddata.Rdata")
# Data Management 1----
rm(list=ls())
load("data/aiddata.Rdata")
View(aiddata)
df_USA <-
aiddata %>%
filter(donor_iso= "USA")
df_USA <-
aiddata %>%
filter(donor_iso= "USA") %>%
group_by(recipient,year) %>%
summarise(sum = sum(commitment_amount_usd_constant,na.rm = TRUE)) %>%
as.data.frame()
df_USA <-
aiddata %>%
filter(donor_iso == "USA") %>%
group_by(recipient,year) %>%
summarise(sum = sum(commitment_amount_usd_constant,na.rm = TRUE)) %>%
as.data.frame()
View(aiddata)
df_USA <-
aiddata %>%
filter(donor_iso == "USA") %>%
group_by(recipient_iso,year) %>%
summarise(sum = sum(commitment_amount_usd_constant,na.rm = TRUE)) %>%
as.data.frame()
View(df_USA)
df_USA <-
aiddata %>%
filter(donor_iso == "US") %>%
group_by(recipient_iso,year) %>%
summarise(sum = sum(commitment_amount_usd_constant,na.rm = TRUE)) %>%
as.data.frame()
# Democracy data ----
df_Dem1<- read_excel("data/p4v2015.xls")
library(plyr)
library(tidyverse)
library(magrittr)
library(ggiraph)
library(stargazer)
library(foreign)
library(ggthemes)
library(readxl)
library(bit64)
library(data.table)
# Democracy data ----
df_Dem1<- read_excel("data/p4v2015.xls")
df_Dem <- data.frame(df_Dem1)
df_Dem$country[df_Dem$country== "Congo Kinshasa"] <- "Congo, Dem. Rep."
df_Dem$country[df_Dem$country== "Congo Brazzaville"] <- "Congo, Rep."
df_Dem$country[df_Dem$country== "Ivory Coast"] <- "Ivory Coast"
df_Dem<-df_Dem[df_Dem$country %in% countrynames,]
df_Dem <- df_Dem[df_Dem$year %in% c(2010, 2011, 2012),]
countrynames<- c("Angola","Benin","Botswana","Burkina Faso","Burundi","Cameroon","Cape Verde","Central African Republic","Chad",
"Comoros","Congo, Rep.","Congo, Dem. Rep.","Ivory Coast","Cote d'Ivoire", "Cote D'Ivoire","Djibouti","Equatorial Guinea","Eritrea","Ethiopia", "Gabon", "Gambia"
,"Ghana", "Guinea","Guinea-Bissau","Kenya","Lesotho","Liberia","Madagascar","Malawi","Mali","Mauritania","Mauritius","Mozambique","Namibia","Niger",
"Nigeria","Rwanda","Sao Tome and Principe","Senegal","Seychelles","Sierra Leone","Somalia","South Africa","Swaziland","Tanzania","Togo","Uganda","Zambia","Zimbabwe", "Sudan")
df_Dem<-df_Dem[df_Dem$country %in% countrynames,]
df_Dem <- df_Dem[df_Dem$year %in% c(2010, 2011, 2012),]
myvars_Dem <- c("scode", "country", "year", "polity2")
df_Dem <- df_Dem[myvars_Dem]
df_Dem <- df_Dem[df_Dem$year %in% c(2010, 2011, 2012),]
myvars_Dem <- c("scode", "country", "year", "polity2")
df_Dem <- df_Dem[myvars_Dem]
df_worlddata <- fread("data/worldbank.csv",
sep=",",
nrows = -1,
na.strings = c("NA","N/A",""),
stringsAsFactors=FALSE,
header=TRUE
)
View(df_worlddata)
df_worlddata2<- data.frame(df_worlddata)
df_worlddata2<-df_worlddata2[df_worlddata2$Country.Name %in% countrynames2,]
df_worlddata2$Country.Name[df_worlddata2$Country.Name== "Cabo Verde"] <- "Cape Verde"
# Data Management 1----
rm(list=ls())
library(plyr)
library(tidyverse)
library(magrittr)
library(ggiraph)
library(stargazer)
library(foreign)
library(ggthemes)
library(readxl)
library(bit64)
library(data.table)
load("data/aiddata.Rdata")
countrynames2<- c("Cabo Verde", "Gambia, The", "Ivory Coast","Angola","Benin","Botswana","Burkina Faso","Burundi","Cameroon","Cape Verde","Central African Republic","Chad",
"Comoros","Congo, Rep.","Congo, Dem. Rep.","Cote d'Ivoire", "Cote D'Ivoire","Djibouti","Equatorial Guinea","Eritrea","Ethiopia", "Gabon", "Gambia"
,"Ghana", "Guinea","Guinea-Bissau","Kenya","Lesotho","Liberia","Madagascar","Malawi","Mali","Mauritania","Mauritius","Mozambique","Namibia","Niger",
"Nigeria","Rwanda","Sao Tome and Principe","Senegal","Seychelles","Sierra Leone","Somalia","South Africa","Swaziland","Tanzania","Togo","Uganda","Zambia","Zimbabwe", "Sudan")
countrynames<- c("Angola","Benin","Botswana","Burkina Faso","Burundi","Cameroon","Cape Verde","Central African Republic","Chad",
"Comoros","Congo, Rep.","Congo, Dem. Rep.","Ivory Coast","Cote d'Ivoire", "Cote D'Ivoire","Djibouti","Equatorial Guinea","Eritrea","Ethiopia", "Gabon", "Gambia"
,"Ghana", "Guinea","Guinea-Bissau","Kenya","Lesotho","Liberia","Madagascar","Malawi","Mali","Mauritania","Mauritius","Mozambique","Namibia","Niger",
"Nigeria","Rwanda","Sao Tome and Principe","Senegal","Seychelles","Sierra Leone","Somalia","South Africa","Swaziland","Tanzania","Togo","Uganda","Zambia","Zimbabwe", "Sudan")
countrynames3<- c("Cabo Verde", "Gambia, The", "Ivory Coast","Angola","Benin","Botswana","Burkina Faso","Burundi","Cameroon","Cape Verde","Central African Republic","Chad",
"Comoros","Congo, Rep.","Congo, Dem. Rep.","Cote d'Ivoire", "Cote D'Ivoire","Djibouti","Equatorial Guinea","Eritrea","Ethiopia", "Gabon", "Gambia"
,"Ghana", "Guinea","Guinea-Bissau","Kenya","Lesotho","Liberia","Madagascar","Malawi","Mali","Mauritania","Mauritius","Mozambique","Namibia","Niger",
"Nigeria","Rwanda","Sao Tome and Principe","Senegal","Seychelles","Sierra Leone","Somalia","South Africa","Swaziland","Tanzania","Togo","Uganda","Zambia","Zimbabwe", "Sudan", "Republic of Congo")
countrycodes<- c("ANG","AGO","BEN","BWA","BFA", "BDI","CMR","CPV","CAF","TCD","COM","COD","COG","CIV",
"DJI","GNQ","ERI","ETH","GAB","GMB","GHA","GIN","GNB","KEN","LSO","LBR","MDG",
"MWI","MLI","MRT","MUS","MOZ","NAM","NER","NGA","RWA","STP","SEN","SYC","SLE",
"SOM","ZAF","SSD","TZA","TGO","UGA","ZMB","ZWE")
df_USA <-
aiddata %>%
filter(donor_iso == "US") %>%
group_by(recipient_iso,year) %>%
summarise(sum = sum(commitment_amount_usd_constant,na.rm = TRUE)) %>%
as.data.frame()
# Democracy data ----
df_Dem1<- read_excel("data/p4v2015.xls")
df_Dem <- data.frame(df_Dem1)
df_Dem$country[df_Dem$country== "Congo Kinshasa"] <- "Congo, Dem. Rep."
df_Dem$country[df_Dem$country== "Congo Brazzaville"] <- "Congo, Rep."
df_Dem$country[df_Dem$country== "Ivory Coast"] <- "Ivory Coast"
df_Dem <- df_Dem[df_Dem$year %in% c(2010, 2011, 2012),]
myvars_Dem <- c("scode", "country", "year", "polity2")
df_Dem <- df_Dem[myvars_Dem]
df_worlddata <- fread("data/worldbank.csv",
sep=",",
nrows = -1,
na.strings = c("NA","N/A",""),
stringsAsFactors=FALSE,
header=TRUE
)
df_worlddata2<- data.frame(df_worlddata)
df_worlddata2<-df_worlddata2[df_worlddata2$Country.Name %in% countrynames2,]
df_worlddata2$Country.Name[df_worlddata2$Country.Name== "Cabo Verde"] <- "Cape Verde"
df_worlddata2$Country.Name[df_worlddata2$Country.Name== "Gambia, The"] <- "Gambia"
df_worlddata2$Country.Name[df_worlddata2$Country.Name== "Cote d'Ivoire"] <- "Ivory Coast"
names(df_worlddata2)[names(df_worlddata2) == "Country.Name"] <- "country"
library(reshape2)
library(stringr)
#Melting and Merging
melted <-
melt(data = df_worlddata2,
id.vars = c("Series.Name",
"Series.Code",
"country",
"Country.Code"),
variable.name = "year",value.name = "value")
melted$year <- melted$year %>% str_sub(start = 2,end = 5) %>% as.numeric()
melted<-melted[-2]
wide_again <- melted %>% spread(key = Series.Name, #oder .Code, wie du willst
value = value)
df_world <- wide_again
View(df_world)
merged1 <- left_join(df_world,aiddata,
by = c("country","year"))
View(aiddata)
df_main$country<-df_main$donor
aiddata$country<-aiddata$donor
View(aiddata)
merged1 <- left_join(df_world,aiddata,
by = c("country","year"))
View(merged1)
merged2 <- left_join(merged1,df_Dem,
by = c("country","year"))
df_main<-df_main_raw
df_main_raw<- merged2
df_main$export_cost <- as.character(df_main$"Cost to export (US$ per container)")%>% as.numeric() #USD per Container
df_main<-df_main_raw
df_main$export_cost <- as.character(df_main$"Cost to export (US$ per container)")%>% as.numeric() #USD per Container
df_main$CPIA <- as.character(df_main$"CPIA property rights and rule-based governance rating (1=low to 6=high)")%>% as.numeric() #1=low 6= high
df_main$export <- as.character(df_main$export)%>% as.numeric() #Constant USD 2010 to 2011
df_main$export <- df_main$export * 1.03
df_main$FDI <- as.character(df_main$`Foreign direct investment, net inflows (% of GDP)`)%>% as.numeric() #% of GDP
df_main$GDPpc<-as.character(df_main$`GDP per capita (constant 2010 US$)`)%>% as.numeric() #as constant of 2010--> 2011
df_main$GDPpc<- df_main$GDPpc*1.03
df_main$loggdppc<- log(df_main$GDPpc)
df_main$Military<- as.character(df_main$`Military expenditure (% of GDP)`)%>% as.numeric() #% of GDP
df_main$ODA_total<- as.character(df_main$`Net official aid received (constant 2015 US$)`)%>% as.numeric() # To 2010_: 0.93
df_main$ODA_total <- df_main$ODA_total * 0.93
df_main$PopTotal<- as.character(df_main$`Population, total`)%>% as.numeric()
df_main$logpop<- log(df_main$PopTotal)
df_main$Rail<- as.character(df_main$`Rail lines (total route-km)`)%>% as.numeric()
df_main$Exporttax<- as.character(df_main$`Taxes on exports (% of tax revenue)`)%>% as.numeric()
df_main$Resourcerent_perc<- as.character(df_main$`Total natural resources rents (% of GDP)`)%>% as.numeric()
df_main$gdp_2010 <- as.character(df_main$ "GDP (constant 2010 US$)")%>% as.numeric()
df_main$Resourcerent_tot <- df_main$Resourcerent_perc * df_main$gdp_2010
df_main$log_Resourcerent <- log(df_main$Resourcerent_tot)
df_main <- df_main[c(-4:-22)]
#pd for main
pd_main<-pdata.frame(df_main,index=c("country","year"))
library(plm)
library("plm")
install.packages("plm")
library(plm)
#pd for main
pd_main<-pdata.frame(df_main,index=c("country","year"))
View(pd_main)
pd_main$aid<- pd_main$commitment_amount_usd_constant
pd_main$aidavg<- diff(pd_main$aid, lag=1)
View(pd_main)
View(pd_main)
df_main$aid<- df_main$commitment_amount_usd_constant
#pd for main
pd_main<-pdata.frame(df_main,index=c("country","year"))
pd_main$aidavg<- diff(pd_main$aid, lag=1)
pd_main$lpolity2<- lag(pd_main$polity2, k=1)
View(merged1)
